var Zepto = (function () { var Z, H, a, h, t = [], R = t.slice, v = t.filter, r = window.document, s = {}, g = {}, n = { "column-count": 1, columns: 1, "font-weight": 1, "line-height": 1, opacity: 1, "z-index": 1, zoom: 1 }, y = /^\s*<(\w+|!)[^>]*>/, Q = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, U = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig, N = /^(?:body|html)$/i, d = /([A-Z])/g, K = ["val", "css", "html", "text", "data", "width", "height", "offset"], b = ["after", "prepend", "before", "append"], S = r.createElement("table"), T = r.createElement("tr"), m = { tr: r.createElement("tbody"), tbody: S, thead: S, tfoot: S, td: T, th: T, "*": r.createElement("div") }, M = /complete|loaded|interactive/, k = /^\.([\w-]+)$/, A = /^#([\w-]*)$/, P = /^[\w-]*$/, f = {}, W = f.toString, ab = {}, c, aa, V = r.createElement("div"), L = { tabindex: "tabIndex", readonly: "readOnly", "for": "htmlFor", "class": "className", maxlength: "maxLength", cellspacing: "cellSpacing", cellpadding: "cellPadding", rowspan: "rowSpan", colspan: "colSpan", usemap: "useMap", frameborder: "frameBorder", contenteditable: "contentEditable" }; ab.matches = function (ac, ag) { if (!ag || !ac || ac.nodeType !== 1) { return false } var ae = ac.webkitMatchesSelector || ac.mozMatchesSelector || ac.oMatchesSelector || ac.matchesSelector; if (ae) { return ae.call(ac, ag) } var ad, af = ac.parentNode, ah = !af; if (ah) { (af = V).appendChild(ac) } ad = ~ab.qsa(af, ag).indexOf(ac); ah && V.removeChild(ac); return ad }; function Y(ac) { return ac == null ? String(ac) : f[W.call(ac)] || "object" } function D(ac) { return Y(ac) == "function" } function G(ac) { return ac != null && ac == ac.window } function C(ac) { return ac != null && ac.nodeType == ac.DOCUMENT_NODE } function E(ac) { return Y(ac) == "object" } function F(ac) { return E(ac) && !G(ac) && Object.getPrototypeOf(ac) == Object.prototype } function B(ac) { return ac instanceof Array } function I(ac) { return typeof ac.length == "number" } function l(ac) { return v.call(ac, function (ad) { return ad != null }) } function x(ac) { return ac.length > 0 ? a.fn.concat.apply([], ac) : ac } c = function (ac) { return ac.replace(/-+(.)?/g, function (ae, ad) { return ad ? ad.toUpperCase() : "" }) }; function o(ac) { return ac.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase() } aa = function (ac) { return v.call(ac, function (ae, ad) { return ac.indexOf(ae) == ad }) }; function j(ac) { return ac in g ? g[ac] : (g[ac] = new RegExp("(^|\\s)" + ac + "(\\s|$)")) } function J(ac, ad) { return (typeof ad == "number" && !n[o(ac)]) ? ad + "px" : ad } function p(ae) { var ad, ac; if (!s[ae]) { ad = r.createElement(ae); r.body.appendChild(ad); ac = getComputedStyle(ad, "").getPropertyValue("display"); ad.parentNode.removeChild(ad); ac == "none" && (ac = "block"); s[ae] = ac } return s[ae] } function e(ac) { return "children" in ac ? R.call(ac.children) : a.map(ac.childNodes, function (ad) { if (ad.nodeType == 1) { return ad } }) } ab.fragment = function (ae, af, ah) { var ad, ag, ac; if (Q.test(ae)) { ad = a(r.createElement(RegExp.$1)) } if (!ad) { if (ae.replace) { ae = ae.replace(U, "<$1></$2>") } if (af === Z) { af = y.test(ae) && RegExp.$1 } if (!(af in m)) { af = "*" } ac = m[af]; ac.innerHTML = "" + ae; ad = a.each(R.call(ac.childNodes), function () { ac.removeChild(this) }) } if (F(ah)) { ag = a(ad); a.each(ah, function (ai, aj) { if (K.indexOf(ai) > -1) { ag[ai](aj) } else { ag.attr(ai, aj) } }) } return ad }; ab.Z = function (ac, ad) { ac = ac || []; ac.__proto__ = a.fn; ac.selector = ad || ""; return ac }; ab.isZ = function (ac) { return ac instanceof ab.Z }; ab.init = function (ae, ac) { var ad; if (!ae) { return ab.Z() } else { if (typeof ae == "string") { ae = ae.trim(); if (ae[0] == "<" && y.test(ae)) { ad = ab.fragment(ae, RegExp.$1, ac), ae = null } else { if (ac !== Z) { return a(ac).find(ae) } else { ad = ab.qsa(r, ae) } } } else { if (D(ae)) { return a(r).ready(ae) } else { if (ab.isZ(ae)) { return ae } else { if (B(ae)) { ad = l(ae) } else { if (E(ae)) { ad = [ae], ae = null } else { if (y.test(ae)) { ad = ab.fragment(ae.trim(), RegExp.$1, ac), ae = null } else { if (ac !== Z) { return a(ac).find(ae) } else { ad = ab.qsa(r, ae) } } } } } } } } return ab.Z(ad, ae) }; a = function (ad, ac) { return ab.init(ad, ac) }; function u(ae, ad, ac) { for (H in ad) { if (ac && (F(ad[H]) || B(ad[H]))) { if (F(ad[H]) && !F(ae[H])) { ae[H] = {} } if (B(ad[H]) && !B(ae[H])) { ae[H] = [] } u(ae[H], ad[H], ac) } else { if (ad[H] !== Z) { ae[H] = ad[H] } } } } a.extend = function (ae) { var ad, ac = R.call(arguments, 1); if (typeof ae == "boolean") { ad = ae; ae = ac.shift() } ac.forEach(function (af) { u(ae, af, ad) }); return ae }; ab.qsa = function (ac, ai) { var ad, ag = ai[0] == "#", af = !ag && ai[0] == ".", ah = ag || af ? ai.slice(1) : ai, ae = P.test(ah); return (C(ac) && ae && ag) ? ((ad = ac.getElementById(ah)) ? [ad] : []) : (ac.nodeType !== 1 && ac.nodeType !== 9) ? [] : R.call(ae && !ag ? af ? ac.getElementsByClassName(ah) : ac.getElementsByTagName(ai) : ac.querySelectorAll(ai)) }; function w(ac, ad) { return ad == null ? a(ac) : a(ac).filter(ad) } a.contains = function (ad, ac) { return ad !== ac && ad.contains(ac) }; function z(ad, ac, ae, af) { return D(ac) ? ac.call(ad, ae, af) : ac } function O(ad, ac, ae) { ae == null ? ad.removeAttribute(ac) : ad.setAttribute(ac, ae) } function i(ad, af) { var ac = ad.className, ae = ac && ac.baseVal !== Z; if (af === Z) { return ae ? ac.baseVal : ac } ae ? (ac.baseVal = af) : (ad.className = af) } function q(ae) { var ad; try { return ae ? ae == "true" || (ae == "false" ? false : ae == "null" ? null : !/^0/.test(ae) && !isNaN(ad = Number(ae)) ? ad : /^[\[\{]/.test(ae) ? a.parseJSON(ae) : ae) : ae } catch (ac) { return ae } } a.type = Y; a.isFunction = D; a.isWindow = G; a.isArray = B; a.isPlainObject = F; a.isEmptyObject = function (ad) { var ac; for (ac in ad) { return false } return true }; a.inArray = function (ad, ac, ae) { return t.indexOf.call(ac, ad, ae) }; a.camelCase = c; a.trim = function (ac) { return ac == null ? "" : String.prototype.trim.call(ac) }; a.uuid = 0; a.support = {}; a.expr = {}; a.map = function (ad, ac) { var ag, ah = [], ae, af; if (I(ad)) { for (ae = 0; ae < ad.length; ae++) { ag = ac(ad[ae], ae); if (ag != null) { ah.push(ag) } } } else { for (af in ad) { ag = ac(ad[af], af); if (ag != null) { ah.push(ag) } } } return x(ah) }; a.each = function (ad, ac) { var ae, af; if (I(ad)) { for (ae = 0; ae < ad.length; ae++) { if (ac.call(ad[ae], ae, ad[ae]) === false) { return ad } } } else { for (af in ad) { if (ac.call(ad[af], af, ad[af]) === false) { return ad } } } return ad }; a.grep = function (ad, ac) { return v.call(ad, ac) }; if (window.JSON) { a.parseJSON = JSON.parse } a.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (ac, ad) { f["[object " + ad + "]"] = ad.toLowerCase() }); a.fn = { forEach: t.forEach, reduce: t.reduce, push: t.push, sort: t.sort, indexOf: t.indexOf, concat: t.concat, map: function (ac) { return a(a.map(this, function (ad, ae) { return ac.call(ad, ae, ad) })) }, slice: function () { return a(R.apply(this, arguments)) }, ready: function (ac) { if (M.test(r.readyState) && r.body) { ac(a) } else { r.addEventListener("DOMContentLoaded", function () { ac(a) }, false) } return this }, get: function (ac) { return ac === Z ? R.call(this) : this[ac >= 0 ? ac : ac + this.length] }, toArray: function () { return this.get() }, size: function () { return this.length }, remove: function () { return this.each(function () { if (this.parentNode != null) { this.parentNode.removeChild(this) } }) }, each: function (ac) { t.every.call(this, function (ad, ae) { return ac.call(ad, ae, ad) !== false }); return this }, filter: function (ac) { if (D(ac)) { return this.not(this.not(ac)) } return a(v.call(this, function (ad) { return ab.matches(ad, ac) })) }, add: function (ad, ac) { return a(aa(this.concat(a(ad, ac)))) }, is: function (ac) { return this.length > 0 && ab.matches(this[0], ac) }, not: function (ae) { var ad = []; if (D(ae) && ae.call !== Z) { this.each(function (af) { if (!ae.call(this, af)) { ad.push(this) } }) } else { var ac = typeof ae == "string" ? this.filter(ae) : (I(ae) && D(ae.item)) ? R.call(ae) : a(ae); this.forEach(function (af) { if (ac.indexOf(af) < 0) { ad.push(af) } }) } return a(ad) }, has: function (ac) { return this.filter(function () { return E(ac) ? a.contains(this, ac) : a(this).find(ac).size() }) }, eq: function (ac) { return ac === -1 ? this.slice(ac) : this.slice(ac, +ac + 1) }, first: function () { var ac = this[0]; return ac && !E(ac) ? ac : a(ac) }, last: function () { var ac = this[this.length - 1]; return ac && !E(ac) ? ac : a(ac) }, find: function (ae) { var ad, ac = this; if (typeof ae == "object") { ad = a(ae).filter(function () { var af = this; return t.some.call(ac, function (ag) { return a.contains(ag, af) }) }) } else { if (this.length == 1) { ad = a(ab.qsa(this[0], ae)) } else { ad = this.map(function () { return ab.qsa(this, ae) }) } } return ad }, closest: function (af, ad) { var ae = this[0], ac = false; if (typeof af == "object") { ac = a(af) } while (ae && !(ac ? ac.indexOf(ae) >= 0 : ab.matches(ae, af))) { ae = ae !== ad && !C(ae) && ae.parentNode } return a(ae) }, parents: function (ae) { var ac = [], ad = this; while (ad.length > 0) { ad = a.map(ad, function (af) { if ((af = af.parentNode) && !C(af) && ac.indexOf(af) < 0) { ac.push(af); return af } }) } return w(ac, ae) }, parent: function (ac) { return w(aa(this.pluck("parentNode")), ac) }, children: function (ac) { return w(this.map(function () { return e(this) }), ac) }, contents: function () { return this.map(function () { return R.call(this.childNodes) }) }, siblings: function (ac) { return w(this.map(function (ae, ad) { return v.call(e(ad.parentNode), function (af) { return af !== ad }) }), ac) }, empty: function () { return this.each(function () { this.innerHTML = "" }) }, pluck: function (ac) { return a.map(this, function (ad) { return ad[ac] }) }, show: function () { return this.each(function () { this.style.display == "none" && (this.style.display = ""); if (getComputedStyle(this, "").getPropertyValue("display") == "none") { this.style.display = p(this.nodeName) } }) }, replaceWith: function (ac) { return this.before(ac).remove() }, wrap: function (af) { var ae = D(af); if (this[0] && !ae) { var ad = a(af).get(0), ac = ad.parentNode || this.length > 1 } return this.each(function (ag) { a(this).wrapAll(ae ? af.call(this, ag) : ac ? ad.cloneNode(true) : ad) }) }, wrapAll: function (ad) { if (this[0]) { a(this[0]).before(ad = a(ad)); var ac; while ((ac = ad.children()).length) { ad = ac.first() } a(ad).append(this) } return this }, wrapInner: function (ad) { var ac = D(ad); return this.each(function (ag) { var ah = a(this), ae = ah.contents(), af = ac ? ad.call(this, ag) : ad; ae.length ? ae.wrapAll(af) : ah.append(af) }) }, unwrap: function () { this.parent().each(function () { a(this).replaceWith(a(this).children()) }); return this }, clone: function () { return this.map(function () { return this.cloneNode(true) }) }, hide: function () { return this.css("display", "none") }, toggle: function (ac) { return this.each(function () { var ad = a(this); (ac === Z ? ad.css("display") == "none" : ac) ? ad.show() : ad.hide() }) }, prev: function (ac) { return a(this.pluck("previousElementSibling")).filter(ac || "*") }, next: function (ac) { return a(this.pluck("nextElementSibling")).filter(ac || "*") }, html: function (ac) { return arguments.length === 0 ? (this.length > 0 ? this[0].innerHTML : null) : this.each(function (ad) { var ae = this.innerHTML; a(this).empty().append(z(this, ac, ad, ae)) }) }, text: function (ac) { return arguments.length === 0 ? (this.length > 0 ? this[0].textContent : null) : this.each(function () { this.textContent = (ac === Z) ? "" : "" + ac }) }, attr: function (ac, ae) { var ad; return (typeof ac == "string" && ae === Z) ? (this.length == 0 || this[0].nodeType !== 1 ? Z : (ac == "value" && this[0].nodeName == "INPUT") ? this.val() : (!(ad = this[0].getAttribute(ac)) && ac in this[0]) ? this[0][ac] : ad) : this.each(function (af) { if (this.nodeType !== 1) { return } if (E(ac)) { for (H in ac) { O(this, H, ac[H]) } } else { O(this, ac, z(this, ae, af, this.getAttribute(ac))) } }) }, removeAttr: function (ac) { return this.each(function () { this.nodeType === 1 && O(this, ac) }) }, prop: function (ac, ad) { ac = L[ac] || ac; return (ad === Z) ? (this[0] && this[0][ac]) : this.each(function (ae) { this[ac] = z(this, ad, ae, this[ac]) }) }, data: function (ad, ae) { var ac = this.attr("data-" + ad.replace(d, "-$1").toLowerCase(), ae); return ac !== null ? q(ac) : Z }, val: function (ac) { return arguments.length === 0 ? (this[0] && (this[0].multiple ? a(this[0]).find("option").filter(function () { return this.selected }).pluck("value") : this[0].value)) : this.each(function (ad) { this.value = z(this, ac, ad, this.value) }) }, offset: function (ac) { if (ac) { return this.each(function (ag) { var ae = a(this), af = z(this, ac, ag, ae.offset()), ah = ae.offsetParent().offset(), ai = { top: af.top - ah.top, left: af.left - ah.left }; if (ae.css("position") == "static") { ai.position = "relative" } ae.css(ai) }) } if (this.length == 0) { return null } var ad = this[0].getBoundingClientRect(); return { left: ad.left + window.pageXOffset, top: ad.top + window.pageYOffset, width: Math.round(ad.width), height: Math.round(ad.height)} }, css: function (af, ah) { if (arguments.length < 2) { var ae = this[0], ac = getComputedStyle(ae, ""); if (!ae) { return } if (typeof af == "string") { return ae.style[c(af)] || ac.getPropertyValue(af) } else { if (B(af)) { var ag = {}; a.each(B(af) ? af : [af], function (ai, aj) { ag[aj] = (ae.style[c(aj)] || ac.getPropertyValue(aj)) }); return ag } } } var ad = ""; if (Y(af) == "string") { if (!ah && ah !== 0) { this.each(function () { this.style.removeProperty(o(af)) }) } else { ad = o(af) + ":" + J(af, ah) } } else { for (H in af) { if (!af[H] && af[H] !== 0) { this.each(function () { this.style.removeProperty(o(H)) }) } else { ad += o(H) + ":" + J(H, af[H]) + ";" } } } return this.each(function () { this.style.cssText += ";" + ad }) }, index: function (ac) { return ac ? this.indexOf(a(ac)[0]) : this.parent().children().indexOf(this[0]) }, hasClass: function (ac) { if (!ac) { return false } return t.some.call(this, function (ad) { return this.test(i(ad)) }, j(ac)) }, addClass: function (ac) { if (!ac) { return this } return this.each(function (ae) { h = []; var ad = i(this), af = z(this, ac, ae, ad); af.split(/\s+/g).forEach(function (ag) { if (!a(this).hasClass(ag)) { h.push(ag) } }, this); h.length && i(this, ad + (ad ? " " : "") + h.join(" ")) }) }, removeClass: function (ac) { return this.each(function (ad) { if (ac === Z) { return i(this, "") } h = i(this); z(this, ac, ad, h).split(/\s+/g).forEach(function (ae) { h = h.replace(j(ae), " ") }); i(this, h.trim()) }) }, toggleClass: function (ac, ad) { if (!ac) { return this } return this.each(function (af) { var ae = a(this), ag = z(this, ac, af, i(this)); ag.split(/\s+/g).forEach(function (ah) { (ad === Z ? !ae.hasClass(ah) : ad) ? ae.addClass(ah) : ae.removeClass(ah) }) }) }, scrollTop: function (ad) { if (!this.length) { return } var ac = "scrollTop" in this[0]; if (ad === Z) { return ac ? this[0].scrollTop : this[0].pageYOffset } return this.each(ac ? function () { this.scrollTop = ad } : function () { this.scrollTo(this.scrollX, ad) }) }, scrollLeft: function (ad) { if (!this.length) { return } var ac = "scrollLeft" in this[0]; if (ad === Z) { return ac ? this[0].scrollLeft : this[0].pageXOffset } return this.each(ac ? function () { this.scrollLeft = ad } : function () { this.scrollTo(ad, this.scrollY) }) }, position: function () { if (!this.length) { return } var ac = this[0], ae = this.offsetParent(), ad = this.offset(), af = N.test(ae[0].nodeName) ? { top: 0, left: 0} : ae.offset(); ad.top -= parseFloat(a(ac).css("margin-top")) || 0; ad.left -= parseFloat(a(ac).css("margin-left")) || 0; af.top += parseFloat(a(ae[0]).css("border-top-width")) || 0; af.left += parseFloat(a(ae[0]).css("border-left-width")) || 0; return { top: ad.top - af.top, left: ad.left - af.left} }, offsetParent: function () { return this.map(function () { var ac = this.offsetParent || r.body; while (ac && !N.test(ac.nodeName) && a(ac).css("position") == "static") { ac = ac.offsetParent } return ac }) } }; a.fn.detach = a.fn.remove; ["width", "height"].forEach(function (ac) { var ad = ac.replace(/./, function (ae) { return ae[0].toUpperCase() }); a.fn[ac] = function (ag) { var af, ae = this[0]; if (ag === Z) { return G(ae) ? ae["inner" + ad] : C(ae) ? ae.documentElement["scroll" + ad] : (af = this.offset()) && af[ac] } else { return this.each(function (ah) { ae = a(this); ae.css(ac, z(this, ag, ah, ae[ac]())) }) } } }); function X(ae, ac) { ac(ae); for (var ad in ae.childNodes) { X(ae.childNodes[ad], ac) } } b.forEach(function (ad, ae) { var ac = ae % 2; a.fn[ad] = function () { var af, ah = a.map(arguments, function (aj) { af = Y(aj); return af == "object" || af == "array" || aj == null ? aj : ab.fragment(aj) }), ai, ag = this.length > 1; if (ah.length < 1) { return this } return this.each(function (aj, ak) { ai = ac ? ak : ak.parentNode; ak = ae == 0 ? ak.nextSibling : ae == 1 ? ak.firstChild : ae == 2 ? ak : null; ah.forEach(function (al) { if (ag) { al = al.cloneNode(true) } else { if (!ai) { return a(al).remove() } } X(ai.insertBefore(al, ak), function (am) { if (am.nodeName != null && am.nodeName.toUpperCase() === "SCRIPT" && (!am.type || am.type === "text/javascript") && !am.src) { window["eval"].call(window, am.innerHTML) } }) }) }) }; a.fn[ac ? ad + "To" : "insert" + (ae ? "Before" : "After")] = function (af) { a(af)[ad](this); return this } }); ab.Z.prototype = a.fn; ab.uniq = aa; ab.deserializeValue = q; a.zepto = ab; return a })(); window.Zepto = Zepto; window.$ === undefined && (window.$ = Zepto); (function (a) { var b = a.zepto.qsa, c = 1, y, w = Array.prototype.slice, o = a.isFunction, p = function (A) { return typeof A == "string" }, l = {}, x = {}, k = "onfocusin" in window, j = { focus: "focusin", blur: "focusout" }, m = { mouseenter: "mouseover", mouseleave: "mouseout" }; x.click = x.mousedown = x.mouseup = x.mousemove = "MouseEvents"; function z(A) { return A._zid || (A._zid = c++) } function i(A, B, C, E) { B = r(B); if (B.ns) { var D = q(B.ns) } return (l[z(A)] || []).filter(function (F) { return F && (!B.e || F.e == B.e) && (!B.ns || D.test(F.ns)) && (!C || z(F.fn) === z(C)) && (!E || F.sel == E) }) } function r(A) { var B = ("" + A).split("."); return { e: B[0], ns: B.slice(1).sort().join(" ")} } function q(A) { return new RegExp("(?:^| )" + A.replace(" ", " .* ?") + "(?: |$)") } function g(B, A) { return B.del && (!k && (B.e in j)) || !!A } function s(A) { return m[A] || (k && j[A]) || A } function d(D, E, F, B, H, C, A) { var G = z(D), I = (l[G] || (l[G] = [])); E.split(/\s/).forEach(function (K) { if (K == "ready") { return a(document).ready(F) } var L = r(K); L.fn = F; L.sel = H; if (L.e in m) { F = function (M) { var N = M.relatedTarget; if (!N || (N !== this && !a.contains(this, N))) { return L.fn.apply(this, arguments) } } } L.del = C; var J = C || F; L.proxy = function (M) { M = e(M); if (M.isImmediatePropagationStopped()) { return } M.data = B; var N = J.apply(D, M._args == y ? [M] : [M].concat(M._args)); if (N === false) { M.preventDefault(), M.stopPropagation() } return N }; L.i = I.length; I.push(L); if ("addEventListener" in D) { D.addEventListener(s(L.e), L.proxy, g(L, A)) } }) } function t(B, C, D, F, A) { var E = z(B); (C || "").split(/\s/).forEach(function (G) { i(B, G, D, F).forEach(function (H) { delete l[E][H.i]; if ("removeEventListener" in B) { B.removeEventListener(s(H.e), H.proxy, g(H, A)) } }) }) } a.event = { add: d, remove: t }; a.proxy = function (B, A) { if (o(B)) { var C = function () { return B.apply(A, arguments) }; C._zid = z(B); return C } else { if (p(A)) { return a.proxy(B[A], B) } else { throw new TypeError("expected function") } } }; a.fn.bind = function (C, B, A) { return this.on(C, B, A) }; a.fn.unbind = function (B, A) { return this.off(B, A) }; a.fn.one = function (C, D, B, A) { return this.on(C, D, B, A, 1) }; var v = function () { return true }, u = function () { return false }, n = /^([A-Z]|returnValue$|layer[XY]$)/, h = { preventDefault: "isDefaultPrevented", stopImmediatePropagation: "isImmediatePropagationStopped", stopPropagation: "isPropagationStopped" }; function e(A, B) { if (B || !A.isDefaultPrevented) { B || (B = A); a.each(h, function (C, D) { var E = B[C]; A[C] = function () { this[D] = v; return E && E.apply(B, arguments) }; A[D] = u }); if (B.defaultPrevented !== y ? B.defaultPrevented : "returnValue" in B ? B.returnValue === false : B.getPreventDefault && B.getPreventDefault()) { A.isDefaultPrevented = v } } return A } function f(A) { var B, C = { originalEvent: A }; for (B in A) { if (!n.test(B) && A[B] !== y) { C[B] = A[B] } } return e(C, A) } a.fn.delegate = function (C, B, A) { return this.on(B, C, A) }; a.fn.undelegate = function (C, B, A) { return this.off(B, C, A) }; a.fn.live = function (B, A) { a(document.body).delegate(this.selector, B, A); return this }; a.fn.die = function (B, A) { a(document.body).undelegate(this.selector, B, A); return this }; a.fn.on = function (F, H, D, C, G) { var B, E, A = this; if (F && !p(F)) { a.each(F, function (J, I) { A.on(J, H, D, I, G) }); return A } if (!p(H) && !o(C) && C !== false) { C = D, D = H, H = y } if (o(D) || D === false) { C = D, D = y } if (C === false) { C = u } return A.each(function (I, J) { if (G) { B = function (K) { t(J, K.type, C); return C.apply(this, arguments) } } if (H) { E = function (K) { var L, M = a(K.target).closest(H, J).get(0); if (M && M !== J) { L = a.extend(f(K), { currentTarget: M, liveFired: J }); return (B || C).apply(M, [L].concat(w.call(arguments, 1))) } } } d(J, F, C, D, H, E || B) }) }; a.fn.off = function (C, D, B) { var A = this; if (C && !p(C)) { a.each(C, function (F, E) { A.off(F, D, E) }); return A } if (!p(D) && !o(B) && B !== false) { B = D, D = y } if (B === false) { B = u } return A.each(function () { t(this, C, B, D) }) }; a.fn.trigger = function (B, A) { B = (p(B) || a.isPlainObject(B)) ? a.Event(B) : e(B); B._args = A; return this.each(function () { if ("dispatchEvent" in this) { this.dispatchEvent(B) } else { a(this).triggerHandler(B, A) } }) }; a.fn.triggerHandler = function (C, A) { var B, D; this.each(function (F, E) { B = f(p(C) ? a.Event(C) : C); B._args = A; B.target = E; a.each(i(E, C.type || C), function (H, G) { D = G.proxy(B); if (B.isImmediatePropagationStopped()) { return false } }) }); return D }; ("focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error").split(" ").forEach(function (A) { a.fn[A] = function (B) { return B ? this.bind(A, B) : this.trigger(A) } }); ["focus", "blur"].forEach(function (A) { a.fn[A] = function (B) { if (B) { this.bind(A, B) } else { this.each(function () { try { this[A]() } catch (C) { } }) } return this } }); a.Event = function (E, D) { if (!p(E)) { D = E, E = D.type } var B = document.createEvent(x[E] || "Events"), A = true; if (D) { for (var C in D) { (C == "bubbles") ? (A = !!D[C]) : (B[C] = D[C]) } } B.initEvent(E, A, true); return e(B) } })(Zepto); (function (d) { function c(a) { var p = this.os = {}, q = this.browser = {}, v = a.match(/WebKit\/([\d.]+)/), o = a.match(/(Android).*?([\d.]+)/) || /HTC/.test(a) || a.match(/(Adr)\s+([\d.]+)/), w = a.match(/(iPad).*OS\s([\d_]+)/), u = !w && a.match(/(iPhone\sOS)\s([\d_]+)/), x = a.match(/(webOS|hpwOS)[\s\/]([\d.]+)/), t = x && a.match(/TouchPad/), s = a.match(/Kindle\/([\d.]+)/), r = a.match(/Silk\/([\d._]+)/), b = a.match(/(BlackBerry).*Version\/([\d.]+)/); if (q.webkit = !!v) { q.version = v[1] } if (o && !q.webkit && /UCBrowser/.test(a)) { q.webkit = true } if (o) { p.android = true, p.version = o[2] } if (u) { p.ios = p.iphone = true, p.version = u[2].replace(/_/g, ".") } if (w) { p.ios = p.ipad = true, p.version = w[2].replace(/_/g, ".") } if (x) { p.webos = true, p.version = x[2] } if (t) { p.touchpad = true } if (b) { p.blackberry = true, p.version = b[2] } if (s) { p.kindle = true, p.version = s[1] } if (r) { q.silk = true, q.version = r[1] } if (!r && p.android && a.match(/Kindle Fire/)) { q.silk = true } } c.call(d, navigator.userAgent); d.__detect = c })(Zepto); (function ($) { var jsonpID = 0, document = window.document, key, name, rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, scriptTypeRE = /^(?:text|application)\/javascript/i, xmlTypeRE = /^(?:text|application)\/xml/i, jsonType = "application/json", htmlType = "text/html", blankRE = /^\s*$/; function triggerAndReturn(context, eventName, data) { var event = $.Event(eventName); $(context).trigger(event, data); return !event.isDefaultPrevented() } function triggerGlobal(settings, context, eventName, data) { if (settings.global) { return triggerAndReturn(context || document, eventName, data) } } $.active = 0; function ajaxStart(settings) { if (settings.global && $.active++ === 0) { triggerGlobal(settings, null, "ajaxStart") } } function ajaxStop(settings) { if (settings.global && !(--$.active)) { triggerGlobal(settings, null, "ajaxStop") } } function ajaxBeforeSend(xhr, settings) { var context = settings.context; if (settings.beforeSend.call(context, xhr, settings) === false || triggerGlobal(settings, context, "ajaxBeforeSend", [xhr, settings]) === false) { return false } triggerGlobal(settings, context, "ajaxSend", [xhr, settings]) } function ajaxSuccess(data, xhr, settings, deferred) { var context = settings.context, status = "success"; settings.success.call(context, data, status, xhr); if (deferred) { deferred.resolveWith(context, [data, status, xhr]) } triggerGlobal(settings, context, "ajaxSuccess", [xhr, settings, data]); ajaxComplete(status, xhr, settings) } function ajaxError(error, type, xhr, settings, deferred) { var context = settings.context; settings.error.call(context, xhr, type, error); if (deferred) { deferred.rejectWith(context, [xhr, type, error]) } triggerGlobal(settings, context, "ajaxError", [xhr, settings, error || type]); ajaxComplete(type, xhr, settings) } function ajaxComplete(status, xhr, settings) { var context = settings.context; settings.complete.call(context, xhr, status); triggerGlobal(settings, context, "ajaxComplete", [xhr, settings]); ajaxStop(settings) } function empty() { } $.ajaxJSONP = function (options, deferred) { if (!("type" in options)) { return $.ajax(options) } var _callbackName = options.jsonpCallback, callbackName = ($.isFunction(_callbackName) ? _callbackName() : _callbackName) || ("jsonp" + (++jsonpID)), script = document.createElement("script"), originalCallback = window[callbackName], responseData, abort = function (errorType) { $(script).triggerHandler("error", errorType || "abort") }, xhr = { abort: abort }, abortTimeout; if (deferred) { deferred.promise(xhr) } $(script).on("load error", function (e, errorType) { clearTimeout(abortTimeout); $(script).off().remove(); if (e.type == "error" || !responseData) { ajaxError(null, errorType || "error", xhr, options, deferred) } else { ajaxSuccess(responseData[0], xhr, options, deferred) } window[callbackName] = originalCallback; if (responseData && $.isFunction(originalCallback)) { originalCallback(responseData[0]) } originalCallback = responseData = undefined }); if (ajaxBeforeSend(xhr, options) === false) { abort("abort"); return xhr } window[callbackName] = function () { responseData = arguments }; script.src = options.url.replace(/=\?/, "=" + callbackName); document.head.appendChild(script); if (options.timeout > 0) { abortTimeout = setTimeout(function () { abort("timeout") }, options.timeout) } return xhr }; $.ajaxSettings = { type: "GET", beforeSend: empty, success: empty, error: empty, complete: empty, context: null, global: true, xhr: function () { return new window.XMLHttpRequest() }, accepts: { script: "text/javascript, application/javascript, application/x-javascript", json: jsonType, xml: "application/xml, text/xml", html: htmlType, text: "text/plain" }, crossDomain: false, timeout: 0, processData: true, cache: true }; function mimeToDataType(mime) { if (mime) { mime = mime.split(";", 2)[0] } return mime && (mime == htmlType ? "html" : mime == jsonType ? "json" : scriptTypeRE.test(mime) ? "script" : xmlTypeRE.test(mime) && "xml") || "text" } function appendQuery(url, query) { if (query == "") { return url } return (url + "&" + query).replace(/[&?]{1,2}/, "?") } function serializeData(options) { if (options.processData && options.data && $.type(options.data) != "string") { options.data = $.param(options.data, options.traditional) } if (options.data && (!options.type || options.type.toUpperCase() == "GET")) { options.url = appendQuery(options.url, options.data), options.data = undefined } } $.ajax = function (options) { var settings = $.extend({}, options || {}), deferred = $.Deferred && $.Deferred(); for (key in $.ajaxSettings) { if (settings[key] === undefined) { settings[key] = $.ajaxSettings[key] } } ajaxStart(settings); if (!settings.crossDomain) { settings.crossDomain = /^([\w-]+:)?\/\/([^\/]+)/.test(settings.url) && RegExp.$2 != window.location.host } if (!settings.url) { settings.url = window.location.toString() } serializeData(settings); if (settings.cache === false) { settings.url = appendQuery(settings.url, "_=" + Date.now()) } var dataType = settings.dataType, hasPlaceholder = /=\?/.test(settings.url); if (dataType == "jsonp" || hasPlaceholder) { if (!hasPlaceholder) { settings.url = appendQuery(settings.url, settings.jsonp ? (settings.jsonp + "=?") : settings.jsonp === false ? "" : "callback=?") } return $.ajaxJSONP(settings, deferred) } var mime = settings.accepts[dataType], headers = {}, setHeader = function (name, value) { headers[name.toLowerCase()] = [name, value] }, protocol = /^([\w-]+:)\/\//.test(settings.url) ? RegExp.$1 : window.location.protocol, xhr = settings.xhr(), nativeSetHeader = xhr.setRequestHeader, abortTimeout; if (deferred) { deferred.promise(xhr) } if (!settings.crossDomain) { setHeader("X-Requested-With", "XMLHttpRequest") } setHeader("Accept", mime || "*/*"); if (mime = settings.mimeType || mime) { if (mime.indexOf(",") > -1) { mime = mime.split(",", 2)[0] } xhr.overrideMimeType && xhr.overrideMimeType(mime) } if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != "GET")) { setHeader("Content-Type", settings.contentType || "application/x-www-form-urlencoded") } if (settings.headers) { for (name in settings.headers) { setHeader(name, settings.headers[name]) } } xhr.setRequestHeader = setHeader; xhr.onreadystatechange = function () { if (xhr.readyState == 4) { xhr.onreadystatechange = empty; clearTimeout(abortTimeout); var result, error = false; if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == "file:")) { dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader("content-type")); result = xhr.responseText; try { if (dataType == "script") { (1, eval)(result) } else { if (dataType == "xml") { result = xhr.responseXML } else { if (dataType == "json") { result = blankRE.test(result) ? null : $.parseJSON(result) } } } } catch (e) { error = e } if (error) { ajaxError(error, "parsererror", xhr, settings, deferred) } else { ajaxSuccess(result, xhr, settings, deferred) } } else { ajaxError(xhr.statusText || null, xhr.status ? "error" : "abort", xhr, settings, deferred) } } }; if (ajaxBeforeSend(xhr, settings) === false) { xhr.abort(); ajaxError(null, "abort", xhr, settings, deferred); return xhr } if (settings.xhrFields) { for (name in settings.xhrFields) { xhr[name] = settings.xhrFields[name] } } var async = "async" in settings ? settings.async : true; xhr.open(settings.type, settings.url, async, settings.username, settings.password); for (name in headers) { nativeSetHeader.apply(xhr, headers[name]) } if (settings.timeout > 0) { abortTimeout = setTimeout(function () { xhr.onreadystatechange = empty; xhr.abort(); ajaxError(null, "timeout", xhr, settings, deferred) }, settings.timeout) } xhr.send(settings.data ? settings.data : null); return xhr }; function parseArguments(url, data, success, dataType) { var hasData = !$.isFunction(data); return { url: url, data: hasData ? data : undefined, success: !hasData ? data : $.isFunction(success) ? success : undefined, dataType: hasData ? dataType || success : success} } $.get = function (url, data, success, dataType) { return $.ajax(parseArguments.apply(null, arguments)) }; $.post = function (url, data, success, dataType) { var options = parseArguments.apply(null, arguments); options.type = "POST"; return $.ajax(options) }; $.getJSON = function (url, data, success) { var options = parseArguments.apply(null, arguments); options.dataType = "json"; return $.ajax(options) }; $.fn.load = function (url, data, success) { if (!this.length) { return this } var self = this, parts = url.split(/\s/), selector, options = parseArguments(url, data, success), callback = options.success; if (parts.length > 1) { options.url = parts[0], selector = parts[1] } options.success = function (response) { self.html(selector ? $("<div>").html(response.replace(rscript, "")).find(selector) : response); callback && callback.apply(self, arguments) }; $.ajax(options); return this }; var escape = encodeURIComponent; function serialize(params, obj, traditional, scope) { var type, array = $.isArray(obj), hash = $.isPlainObject(obj); $.each(obj, function (key, value) { type = $.type(value); if (scope) { key = traditional ? scope : scope + "[" + (hash || type == "object" || type == "array" ? key : "") + "]" } if (!scope && array) { params.add(value.name, value.value) } else { if (type == "array" || (!traditional && type == "object")) { serialize(params, value, traditional, key) } else { params.add(key, value) } } }) } $.param = function (obj, traditional) { var params = []; params.add = function (k, v) { this.push(escape(k) + "=" + escape(v)) }; serialize(params, obj, traditional); return params.join("&").replace(/%20/g, "+") } })(Zepto); (function (b) { b.fn.serializeArray = function () { var a = [], d; b(Array.prototype.slice.call(this.get(0).elements)).each(function () { d = b(this); var c = d.attr("type"); if (this.nodeName.toLowerCase() != "fieldset" && !this.disabled && c != "submit" && c != "reset" && c != "button" && (c != "radio" && c != "checkbox" || this.checked)) { a.push({ name: d.attr("name"), value: d.val() }) } }); return a }; b.fn.serialize = function () { var a = []; this.serializeArray().forEach(function (d) { a.push(encodeURIComponent(d.name) + "=" + encodeURIComponent(d.value)) }); return a.join("&") }; b.fn.submit = function (d) { if (d) { this.bind("submit", d) } else { if (this.length) { var a = b.Event("submit"); this.eq(0).trigger(a); if (!a.defaultPrevented) { this.get(0).submit() } } } return this } })(Zepto); (function (a) { var m = {}, n, l, k, i, h = 750, d; function j(o, p, q, r) { return Math.abs(o - p) >= Math.abs(q - r) ? (o - p > 0 ? "Left" : "Right") : (q - r > 0 ? "Up" : "Down") } function g() { i = null; if (m.last) { m.el.trigger("longTap"); m = {} } } function c() { if (i) { clearTimeout(i) } i = null } function b() { if (n) { clearTimeout(n) } if (l) { clearTimeout(l) } if (k) { clearTimeout(k) } if (i) { clearTimeout(i) } n = l = k = i = null; m = {} } function f(o) { return (o.pointerType == "touch" || o.pointerType == o.MSPOINTER_TYPE_TOUCH) && o.isPrimary } function e(o, p) { return (o.type == "pointer" + p || o.type.toLowerCase() == "mspointer" + p) } a(document).ready(function () { var t, p, q = 0, r = 0, s, o; if ("MSGesture" in window) { d = new MSGesture(); d.target = document.body } a(document).bind("MSGestureEnd", function (u) { var v = u.velocityX > 1 ? "Right" : u.velocityX < -1 ? "Left" : u.velocityY > 1 ? "Down" : u.velocityY < -1 ? "Up" : null; if (v) { m.el.trigger("swipe"); m.el.trigger("swipe" + v) } }).on("touchstart MSPointerDown pointerdown", function (u) { if ((o = e(u, "down")) && !f(u)) { return } s = o ? u : u.touches[0]; if (u.touches && u.touches.length === 1 && m.x2) { m.x2 = undefined; m.y2 = undefined } t = Date.now(); p = t - (m.last || t); m.el = a("tagName" in s.target ? s.target : s.target.parentNode); n && clearTimeout(n); m.x1 = s.pageX; m.y1 = s.pageY; if (p > 0 && p <= 250) { m.isDoubleTap = true } m.last = t; i = setTimeout(g, h); if (d && o) { d.addPointer(u.pointerId) } }).on("touchmove MSPointerMove pointermove", function (u) { if ((o = e(u, "move")) && !f(u)) { return } s = o ? u : u.touches[0]; c(); m.x2 = s.pageX; m.y2 = s.pageY; q += Math.abs(m.x1 - m.x2); r += Math.abs(m.y1 - m.y2) }).on("touchend MSPointerUp pointerup", function (u) { if ((o = e(u, "up")) && !f(u)) { return } c(); if ((m.x2 && Math.abs(m.x1 - m.x2) > 30) || (m.y2 && Math.abs(m.y1 - m.y2) > 30)) { k = setTimeout(function () { m.el.trigger("swipe"); m.el.trigger("swipe" + (j(m.x1, m.x2, m.y1, m.y2))); m = {} }, 0) } else { if ("last" in m) { if (q < 30 && r < 30) { l = setTimeout(function () { var v = a.Event("tap"); v.cancelTouch = b; m.el.trigger(v); if (m.isDoubleTap) { if (m.el) { m.el.trigger("doubleTap") } m = {} } else { n = setTimeout(function () { n = null; if (m.el) { m.el.trigger("singleTap") } m = {} }, 250) } }, 0) } else { m = {} } } } q = r = 0 }).on("touchcancel MSPointerCancel pointercancel", b); a(window).on("scroll", b) }); ["swipe", "swipeLeft", "swipeRight", "swipeUp", "swipeDown", "doubleTap", "tap", "singleTap", "longTap"].forEach(function (o) { a.fn[o] = function (p) { return this.on(o, p) } }) })(Zepto); (function (c) { var b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; var a = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1); c.base64encode = function (k) { var j, g, h; var d, e, f; h = k.length; g = 0; j = ""; while (g < h) { d = k.charCodeAt(g++) & 255; if (g == h) { j += b.charAt(d >> 2); j += b.charAt((d & 3) << 4); j += "=="; break } e = k.charCodeAt(g++); if (g == h) { j += b.charAt(d >> 2); j += b.charAt((d & 3) << 4 | (e & 240) >> 4); j += b.charAt((e & 15) << 2); j += "="; break } f = k.charCodeAt(g++); j += b.charAt(d >> 2); j += b.charAt((d & 3) << 4 | (e & 240) >> 4); j += b.charAt((e & 15) << 2 | (f & 192) >> 6); j += b.charAt(f & 63) } return j }; c.base64decode = function (l) { var d, e, f, g; var h, j, k; j = l.length; h = 0; k = ""; while (h < j) { do { d = a[l.charCodeAt(h++) & 255] } while (h < j && d == -1); if (d == -1) { break } do { e = a[l.charCodeAt(h++) & 255] } while (h < j && e == -1); if (e == -1) { break } k += String.fromCharCode(d << 2 | (e & 48) >> 4); do { f = l.charCodeAt(h++) & 255; if (f == 61) { return k } f = a[f] } while (h < j && f == -1); if (f == -1) { break } k += String.fromCharCode((e & 15) << 4 | (f & 60) >> 2); do { g = l.charCodeAt(h++) & 255; if (g == 61) { return k } g = a[g] } while (h < j && g == -1); if (g == -1) { break } k += String.fromCharCode((f & 3) << 6 | g) } return k } })(Zepto); (function (E, d) { var p = Math, e = d.createElement("div").style, D = (function () { var H = "t,webkitT,MozT,msT,OT".split(","), G, m = 0, F = H.length; for (; m < F; m++) { G = H[m] + "ransform"; if (G in e) { return H[m].substr(0, H[m].length - 1) } } return false })(), c = D ? "-" + D.toLowerCase() + "-" : "", v = s("transform"), z = s("transitionProperty"), y = s("transitionDuration"), w = s("transformOrigin"), A = s("transitionTimingFunction"), x = s("transitionDelay"), k = (/android/gi).test(navigator.appVersion), n = (/iphone|ipad/gi).test(navigator.appVersion), o = (/hp-tablet/gi).test(navigator.appVersion), g = s("perspective") in e, h = "ontouchstart" in E && !o, i = D !== false, j = s("transition") in e, t = "onorientationchange" in E ? "orientationchange" : "resize", u = h ? "touchstart" : "mousedown", q = h ? "touchmove" : "mousemove", f = h ? "touchend" : "mouseup", a = h ? "touchcancel" : "mouseup", C = (function () { if (D === false) { return false } var m = { "": "transitionend", webkit: "webkitTransitionEnd", Moz: "transitionend", O: "otransitionend", ms: "MSTransitionEnd" }; return m[D] })(), r = (function () { return E.requestAnimationFrame || E.webkitRequestAnimationFrame || E.mozRequestAnimationFrame || E.oRequestAnimationFrame || E.msRequestAnimationFrame || function (m) { return setTimeout(m, 1) } })(), b = (function () { return E.cancelRequestAnimationFrame || E.webkitCancelAnimationFrame || E.webkitCancelRequestAnimationFrame || E.mozCancelRequestAnimationFrame || E.oCancelRequestAnimationFrame || E.msCancelRequestAnimationFrame || clearTimeout })(), B = g ? " translateZ(0)" : "", l = function (m, G) { var H = this, F; H.wrapper = typeof m == "object" ? m : d.getElementById(m); H.wrapper.style.overflow = "hidden"; H.scroller = H.wrapper.children[0]; H.options = { hScroll: true, vScroll: true, x: 0, y: 0, bounce: true, bounceLock: false, momentum: true, lockDirection: true, useTransform: true, useTransition: false, topOffset: 0, checkDOMChanges: false, handleClick: true, hScrollbar: true, vScrollbar: true, fixedScrollbar: k, hideScrollbar: n, fadeScrollbar: n && g, scrollbarClass: "", zoom: false, zoomMin: 1, zoomMax: 4, doubleTapZoom: 2, wheelAction: "scroll", snap: false, snapThreshold: 1, onRefresh: null, onBeforeScrollStart: function (I) { }, onScrollStart: null, onBeforeScrollMove: function (I) { I.preventDefault() }, onScrollMove: null, onBeforeScrollEnd: null, onScrollEnd: null, onTouchEnd: null, onDestroy: null, onZoomStart: null, onZoom: null, onZoomEnd: null }; for (F in G) { H.options[F] = G[F] } H.x = H.options.x; H.y = H.options.y; H.options.useTransform = i && H.options.useTransform; H.options.hScrollbar = H.options.hScroll && H.options.hScrollbar; H.options.vScrollbar = H.options.vScroll && H.options.vScrollbar; H.options.zoom = H.options.useTransform && H.options.zoom; H.options.useTransition = j && H.options.useTransition; if (H.options.zoom && k) { B = "" } H.scroller.style[z] = H.options.useTransform ? c + "transform" : "top left"; H.scroller.style[y] = "0"; H.scroller.style[w] = "0 0"; if (H.options.useTransition) { H.scroller.style[A] = "cubic-bezier(0.33,0.66,0.66,1)" } if (H.options.useTransform) { H.scroller.style[v] = "translate(" + H.x + "px," + H.y + "px)" + B } else { H.scroller.style.cssText += ";position:absolute;top:" + H.y + "px;left:" + H.x + "px" } if (H.options.useTransition) { H.options.fixedScrollbar = true } H.refresh(); H._bind(t, E); H._bind(u); if (!h) { if (H.options.wheelAction != "none") { H._bind("DOMMouseScroll"); H._bind("mousewheel") } } if (H.options.checkDOMChanges) { H.checkDOMTime = setInterval(function () { H._checkDOMChanges() }, 500) } }; l.prototype = { enabled: true, x: 0, y: 0, steps: [], scale: 1, currPageX: 0, currPageY: 0, pagesX: [], pagesY: [], aniTime: null, wheelZoomCount: 0, handleEvent: function (m) { var F = this; switch (m.type) { case u: if (!h && m.button !== 0) { return } F._start(m); break; case q: F._move(m); break; case f: case a: F._end(m); break; case t: F._resize(); break; case "DOMMouseScroll": case "mousewheel": F._wheel(m); break; case C: F._transitionEnd(m); break } }, _checkDOMChanges: function () { if (this.moved || this.zoomed || this.animating || (this.scrollerW == this.scroller.offsetWidth * this.scale && this.scrollerH == this.scroller.offsetHeight * this.scale)) { return } this.refresh() }, _scrollbar: function (F) { var G = this, m; if (!G[F + "Scrollbar"]) { if (G[F + "ScrollbarWrapper"]) { if (i) { G[F + "ScrollbarIndicator"].style[v] = "" } G[F + "ScrollbarWrapper"].parentNode.removeChild(G[F + "ScrollbarWrapper"]); G[F + "ScrollbarWrapper"] = null; G[F + "ScrollbarIndicator"] = null } return } if (!G[F + "ScrollbarWrapper"]) { m = d.createElement("div"); if (G.options.scrollbarClass) { m.className = G.options.scrollbarClass + F.toUpperCase() } else { m.style.cssText = "position:absolute;z-index:100;" + (F == "h" ? "height:7px;bottom:1px;left:2px;right:" + (G.vScrollbar ? "7" : "2") + "px" : "width:7px;bottom:" + (G.hScrollbar ? "7" : "2") + "px;top:2px;right:1px") } m.style.cssText += ";pointer-events:none;" + c + "transition-property:opacity;" + c + "transition-duration:" + (G.options.fadeScrollbar ? "350ms" : "0") + ";overflow:hidden;opacity:" + (G.options.hideScrollbar ? "0" : "1"); G.wrapper.appendChild(m); G[F + "ScrollbarWrapper"] = m; m = d.createElement("div"); if (!G.options.scrollbarClass) { m.style.cssText = "position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);" + c + "background-clip:padding-box;" + c + "box-sizing:border-box;" + (F == "h" ? "height:100%" : "width:100%") + ";" + c + "border-radius:3px;border-radius:3px" } m.style.cssText += ";pointer-events:none;" + c + "transition-property:" + c + "transform;" + c + "transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);" + c + "transition-duration:0;" + c + "transform: translate(0,0)" + B; if (G.options.useTransition) { m.style.cssText += ";" + c + "transition-timing-function:cubic-bezier(0.33,0.66,0.66,1)" } G[F + "ScrollbarWrapper"].appendChild(m); G[F + "ScrollbarIndicator"] = m } if (F == "h") { G.hScrollbarSize = G.hScrollbarWrapper.clientWidth; G.hScrollbarIndicatorSize = p.max(p.round(G.hScrollbarSize * G.hScrollbarSize / G.scrollerW), 8); G.hScrollbarIndicator.style.width = G.hScrollbarIndicatorSize + "px"; G.hScrollbarMaxScroll = G.hScrollbarSize - G.hScrollbarIndicatorSize; G.hScrollbarProp = G.hScrollbarMaxScroll / G.maxScrollX } else { G.vScrollbarSize = G.vScrollbarWrapper.clientHeight; G.vScrollbarIndicatorSize = p.max(p.round(G.vScrollbarSize * G.vScrollbarSize / G.scrollerH), 8); G.vScrollbarIndicator.style.height = G.vScrollbarIndicatorSize + "px"; G.vScrollbarMaxScroll = G.vScrollbarSize - G.vScrollbarIndicatorSize; G.vScrollbarProp = G.vScrollbarMaxScroll / G.maxScrollY } G._scrollbarPos(F, true) }, _resize: function () { var m = this; setTimeout(function () { m.refresh() }, k ? 200 : 0) }, _pos: function (m, F) { if (this.zoomed) { return } m = this.hScroll ? m : 0; F = this.vScroll ? F : 0; if (this.options.useTransform) { this.scroller.style[v] = "translate(" + m + "px," + F + "px) scale(" + this.scale + ")" + B } else { m = p.round(m); F = p.round(F); this.scroller.style.left = m + "px"; this.scroller.style.top = F + "px" } this.x = m; this.y = F; this._scrollbarPos("h"); this._scrollbarPos("v") }, _scrollbarPos: function (m, F) { var I = this, G = m == "h" ? I.x : I.y, H; if (!I[m + "Scrollbar"]) { return } G = I[m + "ScrollbarProp"] * G; if (G < 0) { if (!I.options.fixedScrollbar) { H = I[m + "ScrollbarIndicatorSize"] + p.round(G * 3); if (H < 8) { H = 8 } I[m + "ScrollbarIndicator"].style[m == "h" ? "width" : "height"] = H + "px" } G = 0 } else { if (G > I[m + "ScrollbarMaxScroll"]) { if (!I.options.fixedScrollbar) { H = I[m + "ScrollbarIndicatorSize"] - p.round((G - I[m + "ScrollbarMaxScroll"]) * 3); if (H < 8) { H = 8 } I[m + "ScrollbarIndicator"].style[m == "h" ? "width" : "height"] = H + "px"; G = I[m + "ScrollbarMaxScroll"] + (I[m + "ScrollbarIndicatorSize"] - H) } else { G = I[m + "ScrollbarMaxScroll"] } } } I[m + "ScrollbarWrapper"].style[x] = "0"; I[m + "ScrollbarWrapper"].style.opacity = F && I.options.hideScrollbar ? "0" : "1"; I[m + "ScrollbarIndicator"].style[v] = "translate(" + (m == "h" ? G + "px,0)" : "0," + G + "px)") + B }, _start: function (G) { var J = this, I = h ? G.touches[0] : G, H, K, L, m, F; E.el = G.target; if (!J.enabled) { return } if (J.options.onBeforeScrollStart) { J.options.onBeforeScrollStart.call(J, G) } if (J.options.useTransition || J.options.zoom) { J._transitionTime(0) } J.moved = false; J.animating = false; J.zoomed = false; J.distX = 0; J.distY = 0; J.absDistX = 0; J.absDistY = 0; J.dirX = 0; J.dirY = 0; if (J.options.zoom && h && G.touches.length > 1) { m = p.abs(G.touches[0].pageX - G.touches[1].pageX); F = p.abs(G.touches[0].pageY - G.touches[1].pageY); J.touchesDistStart = p.sqrt(m * m + F * F); J.originX = p.abs(G.touches[0].pageX + G.touches[1].pageX - J.wrapperOffsetLeft * 2) / 2 - J.x; J.originY = p.abs(G.touches[0].pageY + G.touches[1].pageY - J.wrapperOffsetTop * 2) / 2 - J.y; if (J.options.onZoomStart) { J.options.onZoomStart.call(J, G) } } if (J.options.momentum) { if (J.options.useTransform) { H = getComputedStyle(J.scroller, null)[v].replace(/[^0-9\-.,]/g, "").split(","); K = +(H[12] || H[4]); L = +(H[13] || H[5]) } else { K = +getComputedStyle(J.scroller, null).left.replace(/[^0-9-]/g, ""); L = +getComputedStyle(J.scroller, null).top.replace(/[^0-9-]/g, "") } if (K != J.x || L != J.y) { if (J.options.useTransition) { J._unbind(C) } else { b(J.aniTime) } J.steps = []; J._pos(K, L); if (J.options.onScrollEnd) { J.options.onScrollEnd.call(J) } } } J.absStartX = J.x; J.absStartY = J.y; J.startX = J.x; J.startY = J.y; J.pointX = I.pageX; J.pointY = I.pageY; J.startTime = G.timeStamp || Date.now(); if (J.options.onScrollStart) { J.options.onScrollStart.call(J, G) } J._bind(q, E); J._bind(f, E); J._bind(a, E) }, _move: function (I) { var N = this, L = h ? I.touches[0] : I, G = L.pageX - N.pointX, H = L.pageY - N.pointY, J = N.x + G, K = N.y + H, m, F, M, O = I.timeStamp || Date.now(); if (N.options.onBeforeScrollMove) { N.options.onBeforeScrollMove.call(N, I) } if (N.options.zoom && h && I.touches.length > 1) { m = p.abs(I.touches[0].pageX - I.touches[1].pageX); F = p.abs(I.touches[0].pageY - I.touches[1].pageY); N.touchesDist = p.sqrt(m * m + F * F); N.zoomed = true; M = 1 / N.touchesDistStart * N.touchesDist * this.scale; if (M < N.options.zoomMin) { M = 0.5 * N.options.zoomMin * Math.pow(2, M / N.options.zoomMin) } else { if (M > N.options.zoomMax) { M = 2 * N.options.zoomMax * Math.pow(0.5, N.options.zoomMax / M) } } N.lastScale = M / this.scale; J = this.originX - this.originX * N.lastScale + this.x; K = this.originY - this.originY * N.lastScale + this.y; this.scroller.style[v] = "translate(" + J + "px," + K + "px) scale(" + M + ")" + B; if (N.options.onZoom) { N.options.onZoom.call(N, I) } return } N.pointX = L.pageX; N.pointY = L.pageY; if (J > 0 || J < N.maxScrollX) { J = N.options.bounce ? N.x + (G / 2) : J >= 0 || N.maxScrollX >= 0 ? 0 : N.maxScrollX } if (K > N.minScrollY || K < N.maxScrollY) { K = N.options.bounce ? N.y + (H / 2) : K >= N.minScrollY || N.maxScrollY >= 0 ? N.minScrollY : N.maxScrollY } N.distX += G; N.distY += H; N.absDistX = p.abs(N.distX); N.absDistY = p.abs(N.distY); if (N.absDistX < 6 && N.absDistY < 6) { return } if (N.options.lockDirection) { if (N.absDistX > N.absDistY + 5) { K = N.y; H = 0 } else { if (N.absDistY > N.absDistX + 5) { J = N.x; G = 0 } } } N.moved = true; N._pos(J, K); N.dirX = G > 0 ? -1 : G < 0 ? 1 : 0; N.dirY = H > 0 ? -1 : H < 0 ? 1 : 0; if (O - N.startTime > 300) { N.startTime = O; N.startX = N.x; N.startY = N.y } if (N.options.onScrollMove) { N.options.onScrollMove.call(N, I) } }, _end: function (H) { if (h && H.touches.length !== 0) { return } var S = this, O = h ? H.changedTouches[0] : H, R, I, J = { dist: 0, time: 0 }, K = { dist: 0, time: 0 }, G = (H.timeStamp || Date.now()) - S.startTime, M = S.x, N = S.y, m, F, L, Q, P; S._unbind(q, E); S._unbind(f, E); S._unbind(a, E); if (S.options.onBeforeScrollEnd) { S.options.onBeforeScrollEnd.call(S, H) } if (S.zoomed) { P = S.scale * S.lastScale; P = Math.max(S.options.zoomMin, P); P = Math.min(S.options.zoomMax, P); S.lastScale = P / S.scale; S.scale = P; S.x = S.originX - S.originX * S.lastScale + S.x; S.y = S.originY - S.originY * S.lastScale + S.y; S.scroller.style[y] = "200ms"; S.scroller.style[v] = "translate(" + S.x + "px," + S.y + "px) scale(" + S.scale + ")" + B; S.zoomed = false; S.refresh(); if (S.options.onZoomEnd) { S.options.onZoomEnd.call(S, H) } return } if (!S.moved) { if (h) { if (S.doubleTapTimer && S.options.zoom) { clearTimeout(S.doubleTapTimer); S.doubleTapTimer = null; if (S.options.onZoomStart) { S.options.onZoomStart.call(S, H) } S.zoom(S.pointX, S.pointY, S.scale == 1 ? S.options.doubleTapZoom : 1); if (S.options.onZoomEnd) { setTimeout(function () { S.options.onZoomEnd.call(S, H) }, 200) } } else { if (this.options.handleClick) { } } } S._resetPos(400); if (S.options.onTouchEnd) { S.options.onTouchEnd.call(S, H) } return } if (G < 300 && S.options.momentum) { J = M ? S._momentum(M - S.startX, G, -S.x, S.scrollerW - S.wrapperW + S.x, S.options.bounce ? S.wrapperW : 0) : J; K = N ? S._momentum(N - S.startY, G, -S.y, (S.maxScrollY < 0 ? S.scrollerH - S.wrapperH + S.y - S.minScrollY : 0), S.options.bounce ? S.wrapperH : 0) : K; M = S.x + J.dist; N = S.y + K.dist; if ((S.x > 0 && M > 0) || (S.x < S.maxScrollX && M < S.maxScrollX)) { J = { dist: 0, time: 0} } if ((S.y > S.minScrollY && N > S.minScrollY) || (S.y < S.maxScrollY && N < S.maxScrollY)) { K = { dist: 0, time: 0} } } if (J.dist || K.dist) { L = p.max(p.max(J.time, K.time), 10); if (S.options.snap) { m = M - S.absStartX; F = N - S.absStartY; if (p.abs(m) < S.options.snapThreshold && p.abs(F) < S.options.snapThreshold) { S.scrollTo(S.absStartX, S.absStartY, 200) } else { Q = S._snap(M, N); M = Q.x; N = Q.y; L = p.max(Q.time, L) } } S.scrollTo(p.round(M), p.round(N), L); if (S.options.onTouchEnd) { S.options.onTouchEnd.call(S, H) } return } if (S.options.snap) { m = M - S.absStartX; F = N - S.absStartY; if (p.abs(m) < S.options.snapThreshold && p.abs(F) < S.options.snapThreshold) { S.scrollTo(S.absStartX, S.absStartY, 200) } else { Q = S._snap(S.x, S.y); if (Q.x != S.x || Q.y != S.y) { S.scrollTo(Q.x, Q.y, Q.time) } } if (S.options.onTouchEnd) { S.options.onTouchEnd.call(S, H) } return } S._resetPos(200); if (S.options.onTouchEnd) { S.options.onTouchEnd.call(S, H) } }, _needFocus: function (m) { switch (m.nodeName.toLowerCase()) { case "textarea": case "select": E.el.focus(); return true; case "input": switch (m.type) { case "button": case "checkbox": case "radio": case "submit": setTimeout(function () { E.el.click() }, 100); return true; case "text": case "tel": case "email": case "password": E.el.focus(); return true } return !m.disabled && !m.readOnly; default: return (/\bneedfocus\b/).test(m.className) } }, _resetPos: function (H) { var G = this, m = G.x >= 0 ? 0 : G.x < G.maxScrollX ? G.maxScrollX : G.x, F = G.y >= G.minScrollY || G.maxScrollY > 0 ? G.minScrollY : G.y < G.maxScrollY ? G.maxScrollY : G.y; if (m == G.x && F == G.y) { if (G.moved) { G.moved = false; if (G.options.onScrollEnd) { G.options.onScrollEnd.call(G) } } if (G.hScrollbar && G.options.hideScrollbar) { if (D == "webkit") { G.hScrollbarWrapper.style[x] = "300ms" } G.hScrollbarWrapper.style.opacity = "0" } if (G.vScrollbar && G.options.hideScrollbar) { if (D == "webkit") { G.vScrollbarWrapper.style[x] = "300ms" } G.vScrollbarWrapper.style.opacity = "0" } return } G.scrollTo(m, F, H || 0) }, _wheel: function (H) { var I = this, J, K, F, G, m; if ("wheelDeltaX" in H) { J = H.wheelDeltaX / 12; K = H.wheelDeltaY / 12 } else { if ("wheelDelta" in H) { J = K = H.wheelDelta / 12 } else { if ("detail" in H) { J = K = -H.detail * 3 } else { return } } } if (I.options.wheelAction == "zoom") { m = I.scale * Math.pow(2, 1 / 3 * (K ? K / Math.abs(K) : 0)); if (m < I.options.zoomMin) { m = I.options.zoomMin } if (m > I.options.zoomMax) { m = I.options.zoomMax } if (m != I.scale) { if (!I.wheelZoomCount && I.options.onZoomStart) { I.options.onZoomStart.call(I, H) } I.wheelZoomCount++; I.zoom(H.pageX, H.pageY, m, 400); setTimeout(function () { I.wheelZoomCount--; if (!I.wheelZoomCount && I.options.onZoomEnd) { I.options.onZoomEnd.call(I, H) } }, 400) } return } F = I.x + J; G = I.y + K; if (F > 0) { F = 0 } else { if (F < I.maxScrollX) { F = I.maxScrollX } } if (G > I.minScrollY) { G = I.minScrollY } else { if (G < I.maxScrollY) { G = I.maxScrollY } } if (I.maxScrollY < 0) { I.scrollTo(F, G, 0) } }, _transitionEnd: function (m) { var F = this; if (m.target != F.scroller) { return } F._unbind(C); F._startAni() }, _startAni: function () { var K = this, H = K.x, I = K.y, G = Date.now(), J, F, m; if (K.animating) { return } if (!K.steps.length) { K._resetPos(400); return } J = K.steps.shift(); if (J.x == H && J.y == I) { J.time = 0 } K.animating = true; K.moved = true; if (K.options.useTransition) { K._transitionTime(J.time); K._pos(J.x, J.y); K.animating = false; if (J.time) { K._bind(C) } else { K._resetPos(0) } return } m = function () { var N = Date.now(), L, M; if (N >= G + J.time) { K._pos(J.x, J.y); K.animating = false; if (K.options.onAnimationEnd) { K.options.onAnimationEnd.call(K) } K._startAni(); return } N = (N - G) / J.time - 1; F = p.sqrt(1 - N * N); L = (J.x - H) * F + H; M = (J.y - I) * F + I; K._pos(L, M); if (K.animating) { K.aniTime = r(m) } }; m() }, _transitionTime: function (m) { m += "ms"; this.scroller.style[y] = m; if (this.hScrollbar) { this.hScrollbarIndicator.style[y] = m } if (this.vScrollbar) { this.vScrollbarIndicator.style[y] = m } }, _momentum: function (F, N, H, G, L) { var m = 0.0006, M = p.abs(F) / N, I = (M * M) / (2 * m), J = 0, K = 0; if (F > 0 && I > H) { K = L / (6 / (I / M * m)); H = H + K; M = M * H / I; I = H } else { if (F < 0 && I > G) { K = L / (6 / (I / M * m)); G = G + K; M = M * G / I; I = G } } I = I * (F < 0 ? -1 : 1); J = M / m; return { dist: I, time: p.round(J)} }, _offset: function (m) { var F = -m.offsetLeft, G = -m.offsetTop; while (m = m.offsetParent) { F -= m.offsetLeft; G -= m.offsetTop } if (m != this.wrapper) { F *= this.scale; G *= this.scale } return { left: F, top: G} }, _snap: function (L, M) { var J = this, m, F, G, K, H, I; G = J.pagesX.length - 1; for (m = 0, F = J.pagesX.length; m < F; m++) { if (L >= J.pagesX[m]) { G = m; break } } if (G == J.currPageX && G > 0 && J.dirX < 0) { G-- } L = J.pagesX[G]; H = p.abs(L - J.pagesX[J.currPageX]); H = H ? p.abs(J.x - L) / H * 500 : 0; J.currPageX = G; G = J.pagesY.length - 1; for (m = 0; m < G; m++) { if (M >= J.pagesY[m]) { G = m; break } } if (G == J.currPageY && G > 0 && J.dirY < 0) { G-- } M = J.pagesY[G]; I = p.abs(M - J.pagesY[J.currPageY]); I = I ? p.abs(J.y - M) / I * 500 : 0; J.currPageY = G; K = p.round(p.max(H, I)) || 200; return { x: L, y: M, time: K} }, _bind: function (G, F, m) { (F || this.scroller).addEventListener(G, this, !!m) }, _unbind: function (G, F, m) { (F || this.scroller).removeEventListener(G, this, !!m) }, destroy: function () { var m = this; m.scroller.style[v] = ""; m.hScrollbar = false; m.vScrollbar = false; m._scrollbar("h"); m._scrollbar("v"); m._unbind(t, E); m._unbind(u); m._unbind(q, E); m._unbind(f, E); m._unbind(a, E); if (!m.options.hasTouch) { m._unbind("DOMMouseScroll"); m._unbind("mousewheel") } if (m.options.useTransition) { m._unbind(C) } if (m.options.checkDOMChanges) { clearInterval(m.checkDOMTime) } if (m.options.onDestroy) { m.options.onDestroy.call(m) } }, refresh: function () { var K = this, H, F, G, m, J = 0, I = 0; if (K.scale < K.options.zoomMin) { K.scale = K.options.zoomMin } K.wrapperW = K.wrapper.clientWidth || 1; K.wrapperH = K.wrapper.clientHeight || 1; K.minScrollY = -K.options.topOffset || 0; K.scrollerW = p.round(K.scroller.offsetWidth * K.scale); K.scrollerH = p.round((K.scroller.offsetHeight + K.minScrollY) * K.scale); K.maxScrollX = K.wrapperW - K.scrollerW; K.maxScrollY = K.wrapperH - K.scrollerH + K.minScrollY; K.dirX = 0; K.dirY = 0; if (K.options.onRefresh) { K.options.onRefresh.call(K) } K.hScroll = K.options.hScroll && K.maxScrollX < 0; K.vScroll = K.options.vScroll && (!K.options.bounceLock && !K.hScroll || K.scrollerH > K.wrapperH); K.hScrollbar = K.hScroll && K.options.hScrollbar; K.vScrollbar = K.vScroll && K.options.vScrollbar && K.scrollerH > K.wrapperH; H = K._offset(K.wrapper); K.wrapperOffsetLeft = -H.left; K.wrapperOffsetTop = -H.top; if (typeof K.options.snap == "string") { K.pagesX = []; K.pagesY = []; m = K.scroller.querySelectorAll(K.options.snap); for (F = 0, G = m.length; F < G; F++) { J = K._offset(m[F]); J.left += K.wrapperOffsetLeft; J.top += K.wrapperOffsetTop; K.pagesX[F] = J.left < K.maxScrollX ? K.maxScrollX : J.left * K.scale; K.pagesY[F] = J.top < K.maxScrollY ? K.maxScrollY : J.top * K.scale } } else { if (K.options.snap) { K.pagesX = []; while (J >= K.maxScrollX) { K.pagesX[I] = J; J = J - K.wrapperW; I++ } if (K.maxScrollX % K.wrapperW) { K.pagesX[K.pagesX.length] = K.maxScrollX - K.pagesX[K.pagesX.length - 1] + K.pagesX[K.pagesX.length - 1] } J = 0; I = 0; K.pagesY = []; while (J >= K.maxScrollY) { K.pagesY[I] = J; J = J - K.wrapperH; I++ } if (K.maxScrollY % K.wrapperH) { K.pagesY[K.pagesY.length] = K.maxScrollY - K.pagesY[K.pagesY.length - 1] + K.pagesY[K.pagesY.length - 1] } } } K._scrollbar("h"); K._scrollbar("v"); if (!K.zoomed) { K.scroller.style[y] = "0"; K._resetPos(400) } }, scrollTo: function (K, L, J, G) { var I = this, H = K, m, F; I.stop(); if (!H.length) { H = [{ x: K, y: L, time: J, relative: G}] } for (m = 0, F = H.length; m < F; m++) { if (H[m].relative) { H[m].x = I.x - H[m].x; H[m].y = I.y - H[m].y } I.steps.push({ x: H[m].x, y: H[m].y, time: H[m].time || 0 }) } I._startAni() }, scrollToElement: function (m, H) { var G = this, F; m = m.nodeType ? m : G.scroller.querySelector(m); if (!m) { return } F = G._offset(m); F.left += G.wrapperOffsetLeft; F.top += G.wrapperOffsetTop; F.left = F.left > 0 ? 0 : F.left < G.maxScrollX ? G.maxScrollX : F.left; F.top = F.top > G.minScrollY ? G.minScrollY : F.top < G.maxScrollY ? G.maxScrollY : F.top; H = H === undefined ? p.max(p.abs(F.left) * 2, p.abs(F.top) * 2) : H; G.scrollTo(F.left, F.top, H) }, scrollToPage: function (m, F, H) { var G = this, I, J; H = H === undefined ? 400 : H; if (G.options.onScrollStart) { G.options.onScrollStart.call(G) } if (G.options.snap) { m = m == "next" ? G.currPageX + 1 : m == "prev" ? G.currPageX - 1 : m; F = F == "next" ? G.currPageY + 1 : F == "prev" ? G.currPageY - 1 : F; m = m < 0 ? 0 : m > G.pagesX.length - 1 ? G.pagesX.length - 1 : m; F = F < 0 ? 0 : F > G.pagesY.length - 1 ? G.pagesY.length - 1 : F; G.currPageX = m; G.currPageY = F; I = G.pagesX[m]; J = G.pagesY[F] } else { I = -G.wrapperW * m; J = -G.wrapperH * F; if (I < G.maxScrollX) { I = G.maxScrollX } if (J < G.maxScrollY) { J = G.maxScrollY } } G.scrollTo(I, J, H) }, disable: function () { this.stop(); this._resetPos(0); this.enabled = false; this._unbind(q, E); this._unbind(f, E); this._unbind(a, E) }, enable: function () { this.enabled = true }, stop: function () { if (this.options.useTransition) { this._unbind(C) } else { b(this.aniTime) } this.steps = []; this.moved = false; this.animating = false }, zoom: function (I, J, F, H) { var G = this, m = F / G.scale; if (!G.options.useTransform) { return } G.zoomed = true; H = H === undefined ? 200 : H; I = I - G.wrapperOffsetLeft - G.x; J = J - G.wrapperOffsetTop - G.y; G.x = I - I * m + G.x; G.y = J - J * m + G.y; G.scale = F; G.refresh(); G.x = G.x > 0 ? 0 : G.x < G.maxScrollX ? G.maxScrollX : G.x; G.y = G.y > G.minScrollY ? G.minScrollY : G.y < G.maxScrollY ? G.maxScrollY : G.y; G.scroller.style[y] = H + "ms"; G.scroller.style[v] = "translate(" + G.x + "px," + G.y + "px) scale(" + F + ")" + B; G.zoomed = false }, isReady: function () { return !this.moved && !this.zoomed && !this.animating } }; function s(m) { if (D === "") { return m } m = m.charAt(0).toUpperCase() + m.substr(1); return D + m } e = null; if (typeof exports !== "undefined") { exports.iScroll = l } else { E.iScroll = l } })(window, document); (function (a) { var b = a.createElement("script"); b.language = "javascript"; b.type = "text/javascript"; if (window.config == null || window.config["path"] == null) { return } else { if (config.env == 0) { config.JsSite = "JS/JavaScript.src/" } else { config.JsSite = "JS/JavaScript/" } } b.src = config.path + config.JsSite + "base/ItemStruct/Frame.js?v=" + config.version; document.getElementsByTagName("head")[0].appendChild(b) })(document); (function ($) { $.Calculate = { Add: function (num1, num2) { var baseNum, baseNum1, baseNum2; try { baseNum1 = num1.toString().split(".")[1].length } catch (e) { baseNum1 = 0 } try { baseNum2 = num2.toString().split(".")[1].length } catch (e) { baseNum2 = 0 } baseNum = Math.pow(10, Math.max(baseNum1, baseNum2)); return (num1 * baseNum + num2 * baseNum) / baseNum }, Sub: function (num1, num2) { var baseNum, baseNum1, baseNum2; var precision; try { baseNum1 = num1.toString().split(".")[1].length } catch (e) { baseNum1 = 0 } try { baseNum2 = num2.toString().split(".")[1].length } catch (e) { baseNum2 = 0 } baseNum = Math.pow(10, Math.max(baseNum1, baseNum2)); precision = (baseNum1 >= baseNum2) ? baseNum1 : baseNum2; return ((num1 * baseNum - num2 * baseNum) / baseNum).toFixed(precision) }, Multi: function (num1, num2) { var baseNum = 0; try { baseNum += num1.toString().split(".")[1].length } catch (e) { } try { baseNum += num2.toString().split(".")[1].length } catch (e) { } return Number(num1.toString().replace(".", "")) * Number(num2.toString().replace(".", "")) / Math.pow(10, baseNum) }, Div: function (num1, num2) { var baseNum1 = 0, baseNum2 = 0; var baseNum3, baseNum4; try { baseNum1 = num1.toString().split(".")[1].length } catch (e) { baseNum1 = 0 } try { baseNum2 = num2.toString().split(".")[1].length } catch (e) { baseNum2 = 0 } with (Math) { baseNum3 = Number(num1.toString().replace(".", "")); baseNum4 = Number(num2.toString().replace(".", "")); return (baseNum3 / baseNum4) * pow(10, baseNum2 - baseNum1) } } } })(Zepto);